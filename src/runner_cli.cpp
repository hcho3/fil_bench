#include <cstdint>
#include <string>

#include <argparse/argparse.hpp>
#include <nlohmann/json.hpp>

int main(int argc, char* argv[]) {
  std::string dir_str;
  std::uint32_t n_reps;

  argparse::ArgumentParser argparser("runner");
  argparser.add_argument("--dir")
      .required()
      .help(
          "Path to directory containing the following output files generated by `tuner`: "
          "tune_result.json, X.npy, model.tl")
      .metavar("DIR")
      .store_into(dir_str);
  argparser.add_argument("--n_reps")
      .default_value(std::uint32_t(10))
      .help("Number of times to run each kernel configuration to measure its performance")
      .metavar("N_REPS")
      .store_into(n_reps);
  try {
    argparser.parse_args(argc, argv);
  } catch (std::runtime_error const& e) {
    std::cerr << e.what() << "\n" << std::endl;
    std::cerr << argparser.help().str() << std::endl;
    return -1;
  }

  return 0;
}
